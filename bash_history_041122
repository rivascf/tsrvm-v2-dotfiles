    1  ll
    2  vim ~/bashrc
    3  vim ~/.bashrc
    4  ll
    5  vim ~/.config/alacritty/alacritty.yml 
    6  exit
    7  vim ~/.config/alacritty/alacritty.yml 
    8  nvim
    9  vim
   10  echo $TERM
   11  sudo apt-get update 
   12  sudo apt update 
   13  sudo apt upgrade
   14  sudo apt autoremove
   15  cd Downloads/
   16  sudo apt install git curl
   17  git clone https://github.com/rivascf/tsrvm-dotfiles.git
   18  cd tsrvm-dotfiles/
   19  ll
   20  cd
   21  echo "Instalando prerequisitos: Nerdfonts, lsd, neovim, git"
   22  sudo apt-get update
   23  sudo apt update && sudo apt upgrade -y
   24  sudo apt install git  python3-pip -y
   25  sudo apt install neovim -y
   26  git --version
   27  nvim --version
   28  pip3 list
   29  echo "Instalando Nerd Fonts"
   30  echo "Descargar 'SourceCodePro (Sauce Code Pro Nerd Fonts)' de https://www.nerdfonts.com/font-downloads"
   31  echo "Descargar 'Cascadia Code' de https://www.nerdfonts.com/font-downloads"
   32  echo "Descargar 'Hack Nerd Font' de https://www.nerdfonts.com/font-downloads"
   33  echo "Descargar 'Roboto Mono Nerd Font' de https://www.nerdfonts.com/font-downloads"
   34  echo "Descargar 'Ubuntu Mono Nerd Font' de https://www.nerdfonts.com/font-downloads"
   35  unzip ~/Downloads/SourceCodePro.zip -d ~/.fonts
   36  unzip ~/Downloads/CascadiaCode.zip -d ~/.fonts
   37  unzip ~/Downloads/Hack.zip -d ~/.fonts
   38  unzip ~/Downloads/RobotoMono.zip -d ~/.fonts
   39  unzip ~/Downloads/UbuntuMono.zip -d ~/.fonts
   40  ll ~/.fonts/
   41  cd ~/.fonts/
   42  ll
   43  l
   44  rm *
   45  ll
   46  cd
   47  unzip ~/Downloads/SourceCodePro.zip -d ~/.fonts/SourceCodePro/
   48  unzip ~/Downloads/CascadiaCode.zip -d ~/.fonts/CascadiaCode/
   49  unzip ~/Downloads/Hack.zip -d ~/.fonts/Hack/
   50  unzip ~/Downloads/RobotoMono.zip -d ~/.fonts/RobotoMono/
   51  unzip ~/Downloads/UbuntuMono.zip -d ~/.fonts/UbuntuMono/
   52  ll ~/.fonts/
   53  fc-cache -fv
   54  echo "Instalando Nerd Fonts... Done!"
   55  echo "Instalando 'lsd' de https://github.com/Peltoche/lsd/releases/download/0.23.1/lsd_0.23.1_amd64.deb"
   56  sudo dpkg -i ~/Downloads/lsd_0.23.1_amd64.deb 
   57  echo "Instalando 'lsd'... Done!"
   58  lsa -la
   59  lsd -la
   60  echo "Personalizando la terminal con los colores, la fuente y lsd (proceso manual)"
   61  nvim ~/.bashrc 
   62  mv ~/Downloads/tsrvm-dotfiles/config/lsd/ ~/.config/
   63  ll ~/.config/
   64  source ~/.bashrc 
   65  ll ~/.config/
   66  echo "Instalando 'lsd' config completed!"
   67  echo "Personalizando la terminal con los colores, la fuente y lsd (proceso manual)... Done!"
   68  echo "Configurando 'git'"
   69  git config --global -e
   70  echo "Configurando 'git'... Done!"
   71  echo "Configurando 'bash aliases'"
   72  nvim .bash_aliases
   73  ll
   74  source ~/.bashrc 
   75  g --version
   76  git config --global -e
   77  echo " 'bash aliases'... Done!"
   78  echo "Transfiriendo utils and auxiliary  scripts"
   79  mv ~/Downloads/tsrvm-dotfiles/config/gitbash/ ~/.config/
   80  mv ~/Downloads/tsrvm-dotfiles/config/rosmgmt/ ~/.config/
   81  mv ~/Downloads/tsrvm-dotfiles/config/utils/ ~/.config/
   82  mv ~/Downloads/tsrvm-dotfiles/config/venv_prompt.sh ~/.config/
   83  ll ~/.config/
   84  echo "Transfiriendo utils and auxiliary  scripts... Done!"
   85  echo "Instalando pynvim"
   86  pip3 install pynvim
   87  pip3 install --upgrade pynv
   88  nvim
   89  echo "Instalando pynvim... done!"
   90  echo "Instalando Alacritty..."
   91  echo "Instalando Alacritty... Prerequisitos... "
   92  g clone ttps://github.com/alacritty/alacritty.git
   93  g clone https://github.com/alacritty/alacritty.git
   94  cd alacritty/
   95  echo "Instalando Alacritty... Prerequisitos... Instalando RUST compiler (rustup)"
   96  curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
   97  source "$HOME/.cargo/env"
   98  rustup override set stable
   99  rustup update stable
  100  echo "Instalando Alacritty... Prerequisitos... Instalando RUST compiler (rustup)... Done!"
  101  echo "Instalando Alacritty... Prerequisitos... Dependences..."
  102  sudo apt-get install cmake pkg-config libfreetype6-dev libfontconfig1-dev libxcb-xfixes0-dev libxkbcommon-dev python3
  103  echo "Instalando Alacritty... Prerequisitos... Dependences... Done!"
  104  echo "Instalando Alacritty... Building..."
  105  cargo build --release
  106  echo "Instalando Alacritty... Building... Done!"
  107  echo "Instalando Alacritty... Post build..."
  108  infocmp alacritty
  109  sudo tic -xe alacritty,alacritty-direct extra/alacritty.info
  110  infocmp alacritty
  111  echo "Instalando Alacritty... Post build... Done!"
  112  echo "Instalando Alacritty... Desktop Entry..."
  113  sudo cp target/release/alacritty /usr/local/bin # or anywhere else in $PATH
  114  sudo cp extra/logo/alacritty-term.svg /usr/share/pixmaps/Alacritty.svg
  115  sudo desktop-file-install extra/linux/Alacritty.desktop
  116  sudo update-desktop-database
  117  echo "Instalando Alacritty... Desktop Entry... Done!"
  118  echo "Instalando Alacritty... Manual entry..."
  119  sudo mkdir -p /usr/local/share/man/man1
  120  gzip -c extra/alacritty.man | sudo tee /usr/local/share/man/man1/alacritty.1.gz > /dev/null
  121  gzip -c extra/alacritty-msg.man | sudo tee /usr/local/share/man/man1/alacritty-msg.1.gz > /dev/null
  122  echo "Instalando Alacritty... Manual entry... Done!"
  123  echo "Instalando Alacritty... Shell completions..."
  124  ll
  125  cd ..
  126  ll
  127  mkdir -p ~/.bash_completion
  128  ll
  129  cd alacritty/
  130  cp extra/completions/alacritty.bash ~/.bash_completion/alacritty
  131  echo "source ~/.bash_completion/alacritty" >> ~/.bashrc
  132  echo "Instalando Alacritty... Shell completions... Done!"
  133  echo "Instalando Alacritty... Verifying installation..."
  134  vim ~/.bashrc 
  135  echo "Instalando Alacritty... Verifying installation... Done!"
  136  echo "Instalando Alacritty... Done!"
  137  echo "Configuring  Alacritty..."
  138  cd ..
  139  mkdir ~/.config/alacritty
  140  ll ~/.config/
  141  vim ~/.config/alacritty/alacritty.yml
  142  echo "Configuring  Alacritty... Testing"
  143  echo "Configuring  Alacritty... Testing... Done!"
  144  echo "Configuring  Alacritty... Done!"
  145  echo "Instalando pyenv"
  146  echo "Instalando pyenv, from blog post 'https://k0nze.dev/posts/install-pyenv-venv-vscode/'"
  147  echo "Instalando pyenv... Prerequisites... "
  148  sudo apt install -y make build-essential libssl-dev zlib1g-dev libbz2-dev libreadline-dev libsqlite3-dev wget curl llvm libncurses5-dev libncursesw5-dev xz-utils tk-dev libffi-dev liblzma-dev python-openssl git
  149  apt search openssl
  150  apt search openssl | grep python
  151  sudo apt install -y make build-essential libssl-dev zlib1g-dev libbz2-dev libreadline-dev libsqlite3-dev wget curl llvm libncurses5-dev libncursesw5-dev xz-utils tk-dev libffi-dev liblzma-dev python3-openssl git
  152  git clone https://github.com/pyenv/pyenv.git ~/.pyenv
  153  ll
  154  echo "Configurando pyenv en .bashrc"
  155  vim ~/.bashrc
  156  source ~/.bashrc 
  157  echo "Probando pyenv e instalando otras versiones de Python"
  158  python -V
  159  python3 -V
  160  pyenv install -l
  161  pyenv versions
  162  pyenv install 3.11.0
  163  pyenv install 2.7.18
  164  pyenv versions
  165  mkdir -p ~/Projects/Python/testpy
  166  cd Projects/Python/testpy/
  167  pyenv local 3.11.0
  168  python -V
  169  python -m venv .venv
  170  pyenv versions
  171  ll
  172  rm .python-version 
  173  python -V
  174  python3 -V
  175  source .venv/bin/activate
  176  python -V
  177  pip -V
  178  deactivate
  179  python -V
  180  echo "Probando pyenv e instalando otras versiones de Python... OK!"
  181  cd
  182  python -V
  183  echo "Instalando pyenv... Done!"
  184  nvim
  185  history 
  186  history >> bash_history_041122
  187  ll
  188  sudo apt remove neovim
  189  nvim
  190  vim
  191  echo "Removing neovim... Done!"
  192  echo "Instalando neovim, source: 'https://github.com/neovim/neovim/wiki/Installing-Neovim', buscar 'Ubuntu'"
  193  echo "Instalando Nvim v0.8.0 (latest)..."
  194  echo "Instalando Nvim v0.8.0 (latest)... Download nvim-linux64.deb... Done!"
  195  sudo apt install ~/Downloads/nvim-linux64.deb 
  196  cd Downloads/
  197  sudo apt install ./nvim-linux64.deb
  198  cd
  199  echo "Instalando Nvim v0.8.0 (latest)... Fail"
  200  echo "Método de instalación: apt-get con 'Personal Package Archive' (PPA), para instalar la última versión estable. Si se usa apt install neovim instala la version 6.0"
  201  sudo apt-get install software-properties-common
  202  sudo apt autoremove
  203  sudo apt-get install python-software-properties
  204  sudo apt-get install python3-software-properties
  205  sudo add-apt-repository ppa:neovim-ppa/stable
  206  sudo apt-get update
  207  sudo apt-get install neovim
  208  nvim
  209  echo "Instalando Nvim v0.7.2 ... Done!"
  210  sudo apt-get install python-dev python-pip python3-dev python3-pip
  211  echo "Updating pynvim"
  212  pip3 install --upgrade pynvim
  213  echo "Testing installation... OK!"
  214  echo "Change default prompt to My Awesome Prompt!"
  215  echo "Adding necessary lines to bashrc"
  216  vim ~/bashrc
  217  vim ~/.bashrc
  218  source ~/.bashrc
  219  vim ~/.bashrc
  220  source ~/.bashrc
  221  vim ~/.config/rosmgmt/ros_mgmt.sh 
  222  mkdir -p ~/.config/utilities
  223  vim ~/.config/utilities/venv_prompt.sh
  224  source  ~/.bashrc 
  225  cd Projects/Python/testpy/
  226  source .venv/bin/activate
  227  git init
  228  gst
  229  ll
  230  deactivate
  231  ll ~/.config/
  232  ll ~/.config/gitbash/
  233  ll ~/.config/rosmgmt/
  234  ll ~/.config/utilities/
  235  source ~/.bashrc 
  236  vim ~/.bashrc
  237  source ~/.bashrc
  238  ll
  239  echo "Change default prompt to My Awesome Prompt... Done!"
  240  echo "Backup history"
  241  history > bash_history_041122
  242  ll
  243  tail bash_history_041122 -n10
  244  echo "Backup history... Done!"
  245  echo "Installing ROS2 Humble"
  246  echo "Installing ROS2 Humble... Guide from 'https://docs.ros.org/en/humble/Installation/Ubuntu-Install-Debians.html'"
  247  echo "check locale"
  248  locale
  249  echo "check locale... 'LANG=en_US.UTF-8'...Ok!"
  250  echo "Setup sources"
  251  apt-cache policy | grep universe
  252  sudo apt install software-properties-common
  253  sudo add-apt-repository universe
  254  sudo apt update && sudo apt install curl gnupg lsb-release
  255  sudo curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -o /usr/share/keyrings/ros-archive-keyring.gpg
  256  echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(source /etc/os-release && echo $UBUNTU_CODENAME) main" | sudo tee /etc/apt/sources.list.d/ros2.list > /dev/null
  257  echo "Setup sources... done!"
  258  echo "Install ROS 2 packages"
  259  sudo apt update
  260  sudo apt upgrade
  261  sudo apt install ros-humble-desktop -y
  262  echo "Install ROS 2 packages... Testing..."
  263  source /opt/ros/humble/setup.bash
  264  ll ~/.config/rosmgmt/
  265  cp ~/.config/rosmgmt/ros2_galactic_conf.bash ~/.config/rosmgmt/ros2_humble_conf.bash 
  266  ll ~/.config/rosmgmt/
  267  vim ~/.config/rosmgmt/ros2_humble_conf.bash 
  268  vim ~/.bashrc 
  269  ros2 run demo_nodes_cpp talker
  270  echo "Install ROS 2 packages... Testing... Done!"
  271  echo "Install ROS 2 packages... Configure... Done!"
  272  echo "Install ROS 2 packages... Configure Enviroment, colcon, etc..."
  273  printenv | grep -i ROS
  274  env | egrep "ROS_.*=|PYTHONPATH|LD_LIBRARY"
  275  echo "Install ROS 2 packages... Installing colcon..."
  276  sudo apt install python3-colcon-common-extensions
  277  echo "Install ROS 2 packages... Installing colcon... Done!"
  278  echo "Install ROS 2 packages... Creating ROS2 workspace"
  279  mkdir -p ~/ROS2Dev/ros2_ws/src
  280  lt ~/ROS2Dev/
  281  cd ~/ROS2Dev/ros2_ws/src
  282  git clone https://github.com/ros2/examples src/examples -b humble
  283  cd ..
  284  colcon build --symlink-install
  285  colcon test
  286  . install/setup.bash 
  287  ros2 run examples_rclcpp_minimal_subscriber subscriber_member_function
  288  echo "Install ROS 2 packages... Creating ROS2 workspace... Done!"
  289  echo "Install ROS 2 packages... Testing ROS2 workspace examples... Done!"
  290  echo "Installing ROS2 Humble... All tests... Done!"
  291  echo "Backup history, again"
  292  history > bash_history_041122
  293  tail bash_history_041122 -n10
  294  echo "Backup history, again... Done!"
  295  echo "ROS 2 post installation..."
  296  vim ~/.config/rosmgmt/ros2_humble_conf.bash 
  297  echo "ROS 2 post installation... Done!"
  298  source ~/.bashrc 
  299  . install/setup.bash 
  300  cd
  301  ros2 
  302  ros2 pkg list
  303  colcon_cd example_interfaces
  304  cd
  305  ros2
  306  ros2 node 
  307  ros2 node list
  308  echo "Backup history, again"
  309  history > bash_history_041122
  310  tail bash_history_041122 -n10
  311  echo "Backup history, again... Done!"
  312  fc-cache list
  313  fc-cache -l
  314  fc-list
  315  fc-list | grep -i Souce
  316  fc-list | grep -i Sauce
  317  echo "Backup history, again"
  318  history > bash_history_041122
